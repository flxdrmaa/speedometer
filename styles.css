:root {
  --bg1: rgba(0, 20, 50, 0.6);
  --bg2: rgba(0, 10, 30, 0.3);
  --glow: rgba(255, 255, 255, 0.95);
  --off: rgba(255, 255, 255, 0.25);
  --health-color: rgba(0, 255, 0, 0.8);
  --fuel-color: rgba(255, 165, 0, 0.8);
}

* {
  user-select: none;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: transparent;
  font-family: 'Orbitron', monospace;
  color: white;
}

/* Main container - MENGGUNAKAN vmin DAN aspect-ratio UNTUK UKURAN RESPONSIF */
.speedo-root {
  position: fixed;
  right: 2vmin;
  bottom: 2vmin;
  display: flex;
  align-items: center;
  justify-content: center;

  /* Ukuran utama menggunakan vmin untuk skala dasar */
  width: 25vmin;
  /* Menggunakan aspect-ratio untuk menjaga proporsi tetap (misal 3:2) */
  aspect-ratio: 3 / 2;
  
  /* Batasan ukuran menggunakan vmin agar tetap responsif */
  min-width: 240px; /* Batas minimum bisa tetap dalam px jika diperlukan */
  max-width: 450px; /* Batas maksimum bisa diperbesar atau disesuaikan */

  gap: 1.2vmin;
  padding: 1.2vmin;
  border-radius: 1.5vmin;
  
  background: linear-gradient(145deg, var(--bg1), var(--bg2));
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  box-shadow: 0 0.6vmin 2.5vmin rgba(0, 0, 0, 0.6);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Left Bars */
.left-bars {
  display: flex;
  flex-direction: row;
  gap: 1.2vmin;
  height: 100%;
  align-items: center;
}

.bar-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.8vmin;
  height: 100%;
  justify-content: center;
}

.bar {
  width: 1.5vmin;
  height: 12vmin;
  border-radius: 0.7vmin;
  background: rgba(0, 0, 0, 0.3);
  overflow: hidden;
  display: flex;
  align-items: flex-end;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.bar-fill {
  width: 100%;
  height: 100%;
  transform: translateY(100%);
  transition: transform 0.4s ease-out;
}

.bar-percent {
  font-size: clamp(10px, 1.2vmin, 16px);
  font-weight: bold;
  color: rgba(255, 255, 255, 0.9);
}

/* Center Panel */
.center-panel {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.speed-display {
  font-family: 'DS-Digital', sans-serif;
  font-size: clamp(50px, 8vmin, 100px);
  font-weight: normal;
  line-height: 0.9;
  color: var(--glow);
  text-shadow: 0 0 1vmin rgba(255, 255, 255, 0.6);
}

.speed-unit {
  font-size: clamp(12px, 1.8vmin, 20px);
  font-weight: bold;
  opacity: 0.8;
  letter-spacing: 0.1vmin;
  margin-top: 0.2vmin;
}

.rpm-container {
  margin-top: 1vmin;
  display: flex;
  justify-content: center;
}

#rpm-boxes {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  gap: 0.4vmin;
  width: 100%;
  max-width: 18vmin;
}

.rpm-box {
  width: 100%;
  height: 0.8vmin;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 0.2vmin;
  transition: all 0.2s;
}

.rpm-box.on { background: var(--glow); box-shadow: 0 0 0.8vmin rgba(255, 255, 255, 0.7); }
.rpm-box.on:nth-child(n+7) { background: #ffae00; box-shadow: 0 0 0.8vmin #ffae00; }
.rpm-box.on:nth-child(n+9) { background: #ff0000; box-shadow: 0 0 1vmin #ff0000; }

.indicators {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1.5vmin;
  margin-top: 1.2vmin;
}

.icon svg {
  width: 2.5vmin;
  height: 2.5vmin;
  fill: var(--off);
  transition: fill 0.3s, filter 0.3s;
}

.icon.active svg {
  fill: var(--glow);
  filter: drop-shadow(0 0 0.8vmin rgba(255, 255, 255, 0.8));
}

.icon.indicator.active#icon-engine svg,
.icon.indicator.active#icon-seatbelt svg {
    fill: #ffcc00;
    filter: drop-shadow(0 0 0.8vmin #ffcc00);
}

.icon.indicator.active#icon-left svg,
.icon.indicator.active#icon-right svg {
    fill: #00ff00;
    filter: drop-shadow(0 0 0.8vmin #00ff00);
}

/* Warna health dan fuel tetap sama */
.bar.health .bar-fill { background: var(--health-color); }
.bar.fuel .bar-fill { background: var(--fuel-color); }```

### Penjelasan Perubahan dan Peningkatan

1.  **Penggunaan `aspect-ratio` pada Kontainer Utama**:
    *   **Masalah**: Kontainer utama (`.speedo-root`) menggunakan `width` dan `height` yang keduanya berbasis `vmin`. Meskipun ini membantu skala, rasio antara lebar dan tinggi dapat sedikit berubah tergantung pada bentuk viewport (apakah lebih persegi atau lebih lebar).
    *   **Solusi**: Dengan menetapkan `width: 25vmin;` dan menambahkan `aspect-ratio: 3 / 2;`, kita secara eksplisit memberitahu browser untuk selalu menjaga proporsi lebar dan tinggi. Ini adalah cara paling efektif untuk memastikan bentuk elemen tetap sama di semua resolusi. Anda dapat menyesuaikan rasio `3 / 2` sesuai dengan desain yang Anda inginkan. Properti `height` tidak lagi diperlukan karena akan dihitung secara otomatis.

2.  **Menghapus Batasan Kaku (`min/max-height`)**:
    *   **Masalah**: `min-height` dan `max-height` dalam piksel secara langsung mengganggu penskalaan proporsional yang coba dicapai oleh `aspect-ratio` dan `vmin`.
    *   **Solusi**: Properti-properti ini telah dihapus. `min-width` dan `max-width` dapat dipertahankan untuk mencegah elemen menjadi terlalu kecil atau terlalu besar, tetapi nilainya mungkin perlu disesuaikan agar lebih fleksibel.

3.  **Konsistensi Penggunaan `vmin`**:
    *   **Masalah**: Beberapa nilai seperti `width` dan `height` pada elemen anak (`.bar`, `#rpm-boxes`, `.icon svg`) sudah menggunakan `vmin`, yang merupakan praktik yang baik.
    *   **Solusi**: Kode yang diperbaiki memastikan bahwa hampir semua unit yang berhubungan dengan ukuran dan spasi (`gap`, `padding`, `border-radius`, dll.) menggunakan `vmin`. Ini membuat seluruh komponen menyusut dan membesar secara harmonis. Nilai-nilai ini sedikit disesuaikan untuk skala yang lebih baik.

4.  **Penyempurnaan `clamp()` untuk Font**:
    *   **Masalah**: `clamp()` adalah alat yang hebat, tetapi nilai-nilainya harus selaras dengan skala keseluruhan.
    *   **Solusi**: Nilai di dalam `clamp()` untuk `.speed-display` dan `.speed-unit` telah disesuaikan. Nilai tengah (nilai pilihan) kini menggunakan `vmin` (`8vmin` dan `1.8vmin`) untuk memastikan ukuran teks diskalakan bersama dengan ukuran kontainer. Nilai minimum dan maksimum (dalam `px`) berfungsi sebagai penjaga agar teks tidak menjadi terlalu kecil atau terlalu besar secara ekstrem.

### Cara Menguji Responsivitas

Untuk melihat bagaimana kode yang diperbarui ini bekerja, Anda dapat menggunakan alat pengembang di browser Anda (biasanya diakses dengan menekan F12):

*   **Aktifkan Mode Desain Responsif**: Di alat pengembang, cari ikon yang terlihat seperti ponsel dan tablet. Ini akan memungkinkan Anda untuk secara manual mengubah ukuran viewport dengan menyeret tepinya.
*   **Amati Penskalaan**: Saat Anda menyeret viewport, perhatikan bagaimana seluruh elemen speedometer—termasuk teks, ikon, dan bar—mengubah ukurannya secara proporsional sambil mempertahankan bentuk dan tata letak yang sama.

Dengan menerapkan perubahan ini, Anda akan mendapatkan komponen speedometer yang benar-benar responsif dan terlihat konsisten, baik pada layar seluler kecil, tablet, maupun monitor desktop beresolusi tinggi seperti FHD.
